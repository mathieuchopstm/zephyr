# Copyright 2024 NXP
# SPDX-License-Identifier: Apache-2.0

#
# Clock controller drivers
#
menuconfig CLOCK_MANAGEMENT
	bool "Clock management drivers"
	help
	  Enable support for clock management drivers. These drivers provide
	  clock configuration to the system via a series of setpoints, which
	  allow drivers to configure clocks based on their desired power
	  state

if CLOCK_MANAGEMENT

module = CLOCK_MANAGEMENT
module-str = clock management
source "subsys/logging/Kconfig.template.log_config"

config CLOCK_MANAGEMENT_DIRECT_STATES
	bool "Reference states directly"
	help
	  Provide raw pointer to state objects to API consumers
	  instead of using clock_output_data as middleman. This
	  should save 12 bytes per clock-output but breaks
	  RUNTIME and clock_management_req_rate().

config CLOCK_MANAGEMENT_NOFREQ_STATES
	bool "Don't store frequency in clock states"
	help
	  Don't store the clock-frequency DT property from clock-states
	  into their runtime-accessible objects. This saves some space
	  but the return value of clock_management_apply_state() becomes
	  meaningless, clock_management_req_rate() will not work and
	  RUNTIME will be broken.

config CLOCK_MANAGEMENT_OFF_ON_SUPPORT
	bool "Enable clock_management_{off/on}"
	help
	  CANDIDATE IMPLEMENTATION OF clock_management_{off/on}.

	  For test purposes only until upstream/collab is ready.

# because we don't have clock_output objects
# when this is enabled, SET_RATE and RUNTIME
# are not supported
if !CLOCK_MANAGEMENT_DIRECT_STATES && !CLOCK_MANAGEMENT_NOFREQ_STATES

config CLOCK_MANAGEMENT_SET_RATE
	bool "Support runtime rate setting"
	select CLOCK_MANAGEMENT_RUNTIME
	help
	  Allow clock consumers to request a given clock frequency via the
	  clock management framework. The framework will then configure the
	  clock tree so that the consumer is supplied with the closest
	  possible frequency to its request. Note that enabling this feature
	  will result in increased flash utilization

config CLOCK_MANAGEMENT_RUNTIME
	bool "Support runtime clock rate requests"
	help
	  Support runtime clock rate requests. When enabled, clock producers
	  will track the clock requests from each consumer, and reject
	  conflicting requests. This Kconfig also enables registering
	  for clock rate change notifications

endif # CLOCK_MANAGEMENT_DIRECT_STATES

config CLOCK_MANAGEMENT_CLK_NAME
	bool "Store names of each clock"
	help
	  Store names of each clock node. Uses additional ROM space. If
	  clock framework debug logging is enabled, traces will be printed
	  as the clock tree is reconfigured.

config CLOCK_MANAGEMENT_FIXED_SOURCE
	bool "Fixed clock source driver"
	default y
	depends on DT_HAS_FIXED_CLOCK_ENABLED
	help
	  Fixed clock source driver, for non configurable clock sources

config CLOCK_MANAGEMENT_SOURCE
	bool "Clock source driver"
	default y
	depends on DT_HAS_CLOCK_SOURCE_ENABLED
	help
	  Clock source driver, for fixed clock sources that may be gated/ungated

rsource "generic/Kconfig"
source "drivers/clock_management/nxp_syscon/Kconfig"
rsource "stm32/Kconfig"

module = CLOCK_MANAGEMENT
module-str = clock-management
source "subsys/logging/Kconfig.template.log_config"

endif # CLOCK_MANAGEMENT
